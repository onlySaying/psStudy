#include <iostream>
#include <vector>
#include <memory.h>
#include <algorithm>
using namespace std;

vector <vector<int>> v;
int triangle[502][502];

int main(void) 
{
    cin.tie(0);
    ios::sync_with_stdio(0);
    
    int n;
    cin >> n;
    int ele;
    for (int i = 0; i < n; i++)
    {
        vector<int> line;
        for (int j = 0; j <= i; j++)
        {
            cin >> ele;
            line.push_back(ele);
        }
        v.push_back(line);
    }
    memset(triangle, 0, sizeof(triangle));
    triangle[0][0] = v[0][0];
    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j <= i; j++)
        {
            if (j - 1 >= 0)
            {
                triangle[i][j] = max(triangle[i - 1][j] + v[i][j], triangle[i - 1][j-1] + v[i][j]);
            }
            else
            {
                triangle[i][j] = triangle[i-1][j] + v[i][j];
            }
            
        }
    }
    int max = 0;
    for (int i = 0; i < n; i++)
    {
        if (max < triangle[n-1][i])
        {
            max = triangle[n-1][i];
        }
    }
   
    cout << max;
    return 0;
}