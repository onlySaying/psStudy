#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
using namespace std;

char arr[20];
bool isused[20];
vector<char> v;
int n, m;
char vowels[5] = { 'a', 'e','i','o','u'};

void func(int k, int ite)
{
	if (k == n)
	{
		int consonatC = 0;
		int vowelC = 0;
		bool flag = false;
		for (int i = 0; i < n; i++)
		{
			flag = false;
			for (int j = 0; j < 5; j++)
			{
				if (arr[i] == vowels[j])
				{
					vowelC++;
					flag = true;
				}
				if (vowelC >= 1 && consonatC >= 2) { break; }
			}
			if (!flag)
			{
				consonatC++;
			}
		}
		if (vowelC < 1 || consonatC < 2) { return; }
		for (int i = 0; i < n; i++)
		{
			cout << arr[i];
		}
		cout << '\n';
		return;
	}
	for (int i = ite; i < v.size(); i++)
	{		
		if (!isused[i])
		{
			arr[k] = v[i];
			isused[i] = true;
			func(k + 1, i+1);
			isused[i] = false;
		}
	}
}

int main() 
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	cin >> n >> m;
	char ele;
	for (int i = 0; i < m; i++)
	{
		cin >> ele;
		v.push_back(ele);
	}
	sort(v.begin(), v.end());
	func(0,0);
	return 0;
}