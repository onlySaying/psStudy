#include <iostream>
#include <vector>
#include <string>
#include <queue>


int mx[2] = { 1,-1 };
using namespace std;

int main(void)
{
	cin.tie(0);
	ios::sync_with_stdio(0);
	string s;
	cin >> s;

	int answer1 = 0;
	int answer0 = 0;
	queue<int> q;
	vector<char> v;
	vector<char> v2;

	for (int i = 0; i < s.length(); i++)
	{
		if (s[i] == '1' || s[i] == '0')
		{
			v.push_back(s[i]);
		}
	}
	
	v2 = v;

	for (int i = 0; i < v.size(); i++)
	{
		if (v[i] == '1') {continue;}
		q.push(i);
		answer0++;
		v[i] = '1';
		while (!q.empty())
		{
			int cur = q.front();
			q.pop();
			for (int i = 0; i < 2; i++)
			{
				int x = cur + mx[i];
				
				if (x >= (int)v.size())
				{
					x = 0;
				}
				else if (x < 0)
				{
					x = s.size() - 1;
				}
				if (v[x] == '1') { continue; }

				q.push(x);
				v[x] = '1';
			}
		}
	}
	while (!q.empty())
	{
		q.pop();
	}
	v = v2;
	for (int i = 0; i < v.size(); i++)
	{
		if (v[i] == '0') { continue; }
		q.push(i);
		answer1++;
		v[i] = '0';
		while (!q.empty())
		{
			int cur = q.front();
			q.pop();
			for (int i = 0; i < 2; i++)
			{
				int x = cur + mx[i];

				if (x >= (int)v.size())
				{
					x = 0;
				}
				else if (x < 0)
				{
					x = s.size() - 1;
				}
				if (v[x] == '0') { continue; }

				q.push(x);
				v[x] = '0';
			}
		}
	}

	cout << min(answer0, answer1);
	return 0;
}