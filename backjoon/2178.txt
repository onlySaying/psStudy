#include<iostream>
#include<vector>
#include <queue>
using namespace std;

int mx[] = { 1, -1 , 0 , 0 };
int my[] = { 0,0, 1, -1 };
int n, m;
int answer = 10001;
int dist[101][101];

int main()
{
	
	cin >> n >> m;
	vector<vector<int>> draw;
	string temp;

	for (int i = 0; i < n; i++)
	{
		vector<int> array;
		cin >> temp;
		for (int j = 0; j < m; j++)
		{
			array.push_back(temp[j] - '0');
		}
		draw.push_back(array);
	}

	
		queue<pair<int, int>> Q;
		Q.push(make_pair(0,0));
		int area = 0;
		while (!Q.empty())
		{
			area++;
			pair<int, int> cur = Q.front();	
			Q.pop();
			
			for (int dir = 0; dir < 4; dir++)
			{
				int x = cur.first + mx[dir];
				int y = cur.second + my[dir];
				if (x < 0 || x >= n || y < 0 || y >= m) continue;
				if (dist[x][y] > 0 || draw[x][y] == 0) continue;
				dist[x][y] = dist[cur.first][cur.second] + 1;
				Q.push(make_pair(x, y));
			}
		}
		cout << dist[n-1][m-1] +1;
		return 0;
}