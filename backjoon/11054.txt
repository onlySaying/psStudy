#include<iostream>
#include<vector>
#include<stack>
#include<limits.h>

using namespace std;

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	int n = 0;
	cin >> n;
	vector<int> v;
	int idx = 0;
	vector<int> dpf(n);
	vector<int> dpb(n);
	
	for (int i = 0; i < n; i++)
	{
		int temp;
		cin >> temp;
		v.push_back(temp);
	}
	
	int ans = 0;
	for (int i =0; i < n ; i++)
	{
		dpf[i] = 1;
		for (int j = 0; j <i; j++)
		{
			if(v[i] > v[j])
			{ 
				dpf[i] = max(dpf[i], dpf[j] + 1); 
			}
		}
	}

	for (int i = n - 1; i >= 0; i--)
	{
		dpb[i] = 1;
		for (int j = n - 1; j > i; j--)
		{
			if (v[i] > v[j])
			{
				dpb[i] = max(dpb[i], dpb[j] + 1);
			}
		}
	}
	for (int i = 0; i < n; i++)
	{
		ans = max(ans, dpb[i] + dpf[i]);
	}
	
	cout << ans-1;
}