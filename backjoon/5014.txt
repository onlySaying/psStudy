#include<iostream>
#include<vector>
#include <queue>
#include <memory.h>
#include<algorithm>
using namespace std;

int dist[1000001];

int main()
{
	int f, s, g, u, d;
	cin >> f >> s >> g >> u >> d;
	queue <int> q;
	q.push(s);
	int cnt;
	int cur;
	vector<int> ud;
	ud.push_back(u);
	ud.push_back(d*-1);
	int nxt;
	fill(dist, dist + f+1, -1);
	dist[s] = 0;
	while (!q.empty())
	{
		cur = q.front();
		q.pop();
		if (cur == g)
		{
			break;
		}
		for (int i = 0; i < 2; i++)
		{
			nxt = cur + ud[i];
			if (nxt <= 0 || nxt > f) { continue; }
			if (dist[nxt] != -1) continue;
			dist[nxt] = dist[cur] + 1;
			q.push(nxt);
		}
	}
	if (dist[g] != -1)
	{
		cout << dist[g];
	}
	else
	{
		cout << "use the stairs";
	}
	return 0;
}